version: "3.8"

x-reverse-proxy-env:
  &reverse-proxy-env
  NGINX_HOST: "${APP_DOMAIN}"
  NGINX_PORT: "80"
  NGINX_CLIENT_MAX_BODY_SIZE: "${NGINX_CLIENT_MAX_BODY_SIZE}"
  MEDIA_ROOT: "/www/media/"
  STATIC_ROOT: "/www/static/"

x-core-build-env:
  &core-build-env
  USER_NAME: "${DOCKER_USER_NAME}"
  USER_UID: "${DOCKER_USER_UID}"
  USER_GID: "${DOCKER_USER_GID}"

x-core-env:
  &core-env
  DEBUG: "True"
  SECRET_KEY: "${SECRET_KEY}"
  ALLOWED_HOSTS: "localhost 127.0.0.1 [::1] ${APP_DOMAIN}"
  APP_NAME: "${APP_NAME}"
  APP_SITE_NAME: "${APP_SITE_NAME} (dev)"
  POSTGRES_HOST: "core-db"
  POSTGRES_PORT: "5432"
  RABBITMQ_HOST: "brocker"
  RABBITMQ_PORT: "5672"
  REDIS_HOST: "cache"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
  DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
  DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"

x-postgres-env:
  &postgres-env
  POSTGRES_DB: "${POSTGRES_DB}"
  POSTGRES_USER: "${POSTGRES_USER}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

x-rabbitmq-env:
  &rabbitmq-env
  RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_DEFAULT_VHOST}"
  RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
  RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"

x-email-env:
  &email-env
  EMAIL_HOST: "${EMAIL_HOST}"
  EMAIL_PORT: "${EMAIL_PORT}"
  EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
  EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
  EMAIL_USE_TLS: "${EMAIL_USE_TLS}"
  EMAIL_USE_SSL: "${EMAIL_USE_SSL}"

services:
  reverse-proxy:
    image: nginx:${NGINX_VERSION}-alpine
    volumes:
      - core-media:/www/media:ro
      - core-static:/www/static:ro
      - ./services/reverse-proxy/nginx/templates:/etc/nginx/templates:ro
    environment:
      <<: *reverse-proxy-env
    ports:
      - "${NGINX_HOST_PORT}:80"
    depends_on:
      - core
    restart: unless-stopped

  core:
    build:
      context: .
      dockerfile: ./services/backend/Dockerfile
      args:
        <<: *core-build-env
    image: ${CORE_DOCKER_IMAGE_NAME}:${CORE_DOCKER_IMAGE_VERSION}
    volumes:
      - ./.git:/code/.git
      - ./.gitignore:/code/.gitignore
      - ./.vscode:/code/.vscode
      - ./lib:/code/lib
      - ./services/backend:/code/services/backend
      - core-media:/code/services/backend/media
      - core-static:/code/services/backend/static
      - core-venv:/code/services/backend/venv
      - core-tox:/code/services/backend/.tox
    environment:
      <<: *core-env
      <<: *rabbitmq-env
      <<: *postgres-env
      <<: *email-env
    expose:
      - "8000"
    ports:
      - "${CORE_HOST_PORT_DEV}:8000"
    command:
      - "./services/backend/utils/wait-for-postgres.sh"
      - "./services/backend/utils/wait-for-rabbitmq.sh"
      - "make"
      - "-C"
      - "/code/services/backend"
      - "sleep"
    depends_on:
      - core-db
      - brocker
      - cache
    restart: unless-stopped

  core-db:
    image: postgres:${POSTGRES_VERSION}-alpine
    volumes:
      - core-db-data:/var/lib/postgresql/data
    environment:
      <<: *postgres-env
    expose:
      - "5432"
    ports:
      - "${POSTGRES_HOST_PORT_DEV}:5432"
    restart: unless-stopped

  brocker:
    image: rabbitmq:${RABBITMQ_VERSION}-management-alpine
    volumes:
      - brocker-data:/var/lib/rabbitmq
    environment:
      <<: *rabbitmq-env
    expose:
      - "5672"
    ports:
      - "${RABBITMQ_HOST_PORT_DEV}:5672"
      - "${RABBITMQ_MANAGEMENT_HOST_PORT}:15672"
    restart: unless-stopped

  cache:
    image: redis:${REDIS_VERSION}-alpine
    volumes:
      - cache-data:/data
    expose:
      - "6379"
    ports:
      - "${REDIS_HOST_PORT_DEV}:6379"
    restart: unless-stopped

volumes:
  brocker-data:
    external: false
    name: "${APP_NAME}_dev_brocker-data"

  cache-data:
    external: false
    name: "${APP_NAME}_dev_cache-data"

  core-db-data:
    external: false
    name: "${APP_NAME}_dev_core-db-data"

  core-media:
    external: false
    name: "${APP_NAME}_dev_core-media"

  core-static:
    external: false
    name: "${APP_NAME}_dev_core-static"

  core-venv:
    external: false
    name: "${APP_NAME}_dev_core-venv"

  core-tox:
    external: false
    name: "${APP_NAME}_dev_core-tox"
